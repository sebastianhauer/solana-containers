name: Solana Container Build

on:
  schedule:
    # Cron format: minute hour day-of-month month day-of-week
    # ┌───────── minute (0-59)
    # │ ┌─────── hour (0-23)
    # │ │ ┌───── day of month (1-31)
    # │ │ │ ┌─── month (1-12 or JAN-DEC)
    # │ │ │ │ ┌─ day of week (0-6 or SUN-SAT)
    # │ │ │ │ │
    # 0 7 1 * *    Run on the 1st day of every month at 02:00 EST (07:00 UTC)
    - cron: '0 7 1 * *'
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  actions: read
  id-token: write

jobs:
  # Generate build matrix based on available runners
  gen-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate distro matrix
        run: ./.github/scripts/gen-distro-matrix.sh "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.RUNNER_PAT }}

  # Build container images for each platform and variant
  build:
    needs: gen-matrix
    strategy:
      matrix: ${{ fromJson(needs.gen-matrix.outputs.matrix) }}
      fail-fast: false

    name: build (${{ matrix.config.platform }}, ${{ matrix.config.distro.name }}, ${{ matrix.config.distro.release }}${{ matrix.config.distro.variant && format(', {0}', matrix.config.distro.variant) }})
    runs-on: ${{ matrix.config.runs-on }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build and push container image
        uses: ./.github/actions/build-platform
        with:
          platform: ${{ matrix.config.platform }}
          distro: ${{ matrix.config.distro.name }}
          distro_release: ${{ matrix.config.distro.release }}
          distro_variant: ${{ matrix.config.distro.variant }}
          token: ${{ secrets.GITHUB_TOKEN }}

  # Cleanup old container images
  cleanup:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Delete old container images
        uses: actions/delete-package-versions@v4
        with:
          # Use the full package name including owner
          package-name: ${{ github.repository_owner }}/solana-containers
          package-type: container
          min-versions-to-keep: 5
          delete-only-untagged-versions: true
          token: ${{ secrets.GITHUB_TOKEN }}