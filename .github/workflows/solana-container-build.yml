name: Solana Container Build

on:
  schedule:
    # Cron format: minute hour day-of-month month day-of-week
    # ┌───────── minute (0-59)
    # │ ┌─────── hour (0-23)
    # │ │ ┌───── day of month (1-31)
    # │ │ │ ┌─── month (1-12 or JAN-DEC)
    # │ │ │ │ ┌─ day of week (0-6 or SUN-SAT)
    # │ │ │ │ │
    # 0 7 1 * *    Run on the 1st day of every month at 02:00 EST (07:00 UTC)
    - cron: '0 7 1 * *'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  # Check for available self-hosted runners
  check-runners:
    runs-on: ubuntu-latest
    outputs:
      has-arm64: ${{ steps.check-runners.outputs.has-arm64 }}
    steps:
      - id: check-runners
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Check for self-hosted ARM64 runner
          has_arm64=$(gh api \
            repos/${{ github.repository }}/actions/runners \
            --jq '[.runners[].labels[].name] | contains(["self-hosted-linux-arm64"]) | tostring')
          echo "has-arm64=${has_arm64}" >> $GITHUB_OUTPUT
          echo "ARM64 runner available: ${has_arm64}"

  # Build container images for each platform and variant
  build:
    needs: check-runners
    strategy:
      matrix:
        config:
          # AMD64 builds always run on GitHub-hosted runners
          - platform: linux/amd64
            runs-on: ubuntu-latest
            distro:
              name: debian
              release: bullseye
              variant: ""  # full version
          - platform: linux/amd64
            runs-on: ubuntu-latest
            distro:
              name: debian
              release: bullseye
              variant: slim

          # ARM64 builds only run when self-hosted runner is available
          - platform: linux/arm64
            runs-on: self-hosted-linux-arm64
            distro:
              name: debian
              release: bullseye
              variant: ""  # full version
          - platform: linux/arm64
            runs-on: self-hosted-linux-arm64
            distro:
              name: debian
              release: bullseye
              variant: slim
        exclude:
          # Exclude ARM64 builds if no runner is available
          - platform: linux/arm64
            runs-on: self-hosted-linux-arm64
            if: ${{ needs.check-runners.outputs.has-arm64 != 'true' }}
      fail-fast: false

    name: build (${{ matrix.config.platform }}, ${{ matrix.config.distro.name }}, ${{ matrix.config.distro.release }}${{ matrix.config.distro.variant && format(', {0}', matrix.config.distro.variant) }})
    runs-on: ${{ matrix.config.runs-on }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build and push container image
        uses: ./.github/actions/build-platform
        with:
          platform: ${{ matrix.config.platform }}
          distro: ${{ matrix.config.distro.name }}
          distro_release: ${{ matrix.config.distro.release }}
          distro_variant: ${{ matrix.config.distro.variant }}
          token: ${{ secrets.GITHUB_TOKEN }}

  # Cleanup old container images
  cleanup:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Delete old container images
        uses: actions/delete-package-versions@v4
        with:
          # Use the full package name including owner
          package-name: ${{ github.repository_owner }}/solana-containers
          package-type: container
          min-versions-to-keep: 5
          delete-only-untagged-versions: true
          token: ${{ secrets.GITHUB_TOKEN }}